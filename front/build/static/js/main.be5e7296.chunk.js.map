{"version":3,"sources":["components/Pokemon.js","components/Player.js","components/User.js","components/App.js","reportWebVitals.js","index.js"],"names":["Pokemon","props","useState","search","setPokemon","console","log","htmlFor","type","value","onChange","evt","target","pokemon","filter","p","toLowerCase","startsWith","map","_id","src","alt","title","HP","Atk","Def","SpA","SpD","Spe","Type_1","Type_2","action","method","name","id","user","Player","teams","player","t","length","poke","team","poke1","poke2","poke3","poke4","poke5","renderTeams","pokeArray","statMap","Map","set","test","parseInt","undefined","type_1","type_2","get","renderStats","User","username","setUsername","usernameChange","onSubmit","event","users","len","x","preventDefault","handleChange","sessionStorage","setItem","alert","placeholder","App","showPokemon","setShowPokemon","setPlayer","showTeam","setShowTeam","setUser","showUserEnter","setShowUserEnter","useEffect","a","fetch","then","res","json","_pokemon","getPokemon","_player","getPlayer","storedUser","getItem","className","href","width","onClick","class","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be5e7296.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles/Pokemon.css\";\n\nfunction Pokemon(props) {\n  const [search, setPokemon] = useState(\"\");\n\n  const renderPokemon = () => {\n    return props.pokemon\n      .filter(\n        (p) =>\n          p.Pokemon && p.Pokemon.toLowerCase().startsWith(search.toLowerCase())\n      )\n      .map((p) => (\n        <li key={p._id}>\n          {p.Pokemon} (#{p._id}) <br />\n          <img\n            src={`./images/${p._id}.png`}\n            alt={`${p.Pokemon} (#${p._id}) Sprite`}\n            title={`${p.Pokemon} (#${p._id})`}\n          />{\" \"}\n          <br />\n          HP: {p.HP} <br />\n          ATK: {p.Atk} <br />\n          DEF: {p.Def} <br />\n          Special Atk: {p.SpA} <br />\n          Special Defense: {p.SpD} <br />\n          Speed: {p.Spe} <br />\n          Type: {p.Type_1} <br />\n          Type II: {p.Type_2} <br />\n          <form action=\"/updateTeam\" method=\"post\">\n            <label htmlFor=\"position\">\n              Choose the position: <br />\n            </label>\n            <select name=\"position\" id={`position${p._id}`}>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n            </select>\n            <input\n              type=\"hidden\"\n              name=\"newPokemon\"\n              id={`newPokemon${p._id}`}\n              value={`${p._id}`}\n            />\n            <input\n              type=\"hidden\"\n              name=\"user\"\n              id=\"user\"\n              value={`${props.user}`}\n            />\n            <br />\n            <button type=\"submit\">Add this pokemon</button>\n          </form>\n          <br />\n        </li>\n      ));\n  };\n\n  console.log(\"rendering Pokemon\", search);\n\n  return (\n    <div>\n      <label htmlFor=\"search\">\n        Search for a pokemon to add to your team:{\" \"}\n        <input\n          type=\"text\"\n          value={search}\n          onChange={(evt) => setPokemon(evt.target.value)}\n        />\n      </label>\n      <br />\n      <ol>{renderPokemon()}</ol>\n    </div>\n  );\n}\n\nPokemon.propTypes = {\n  pokemon: PropTypes.array,\n};\n\nexport default Pokemon;\n","import PropTypes from \"prop-types\";\r\nimport \"./styles/Player.css\";\r\n\r\nfunction Player(props) {\r\n  const renderTeams = () => {\r\n    const teams = props.player.filter((t) =>\r\n      t.name.toLowerCase().startsWith(props.user)\r\n    );\r\n    console.log(teams);\r\n    if (teams.length === 0) return null;\r\n    let poke = teams[0].team[0];\r\n    let poke1 = teams[0].team[1];\r\n    let poke2 = teams[0].team[2];\r\n    let poke3 = teams[0].team[3];\r\n    let poke4 = teams[0].team[4];\r\n    let poke5 = teams[0].team[5];\r\n    return (\r\n      <div>\r\n        <li key={poke}>\r\n          <img src={`./images/${poke}.png`} alt={`(#${poke}) Sprite`} />\r\n          <br />\r\n          <br />\r\n        </li>\r\n        <li key={poke1}>\r\n          <img src={`./images/${poke1}.png`} alt={`(#${poke1}) Sprite`} />\r\n          <br />\r\n          <br />\r\n        </li>\r\n        <li key={poke2}>\r\n          <img src={`./images/${poke2}.png`} alt={`(#${poke2}) Sprite`} />\r\n          <br />\r\n          <br />\r\n        </li>\r\n        <li key={poke3}>\r\n          <img src={`./images/${poke3}.png`} alt={`(#${poke3}) Sprite`} />\r\n          <br />\r\n          <br />\r\n        </li>\r\n        <li key={poke4}>\r\n          <img src={`./images/${poke4}.png`} alt={`(#${poke4}) Sprite`} />\r\n          <br />\r\n          <br />\r\n        </li>\r\n        <li key={poke5}>\r\n          <img src={`./images/${poke5}.png`} alt={`(#${poke5}) Sprite`} />\r\n          <br />\r\n          <br />\r\n        </li>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderStats = () => {\r\n    const teams = props.player.filter((t) =>\r\n      t.name.toLowerCase().startsWith(props.user)\r\n    );\r\n    console.log(\"getting teams\", teams);\r\n    if (teams.length === 0) return null;\r\n    console.log(\"getting team in player\");\r\n    let poke = teams[0].team[0];\r\n    let poke1 = teams[0].team[1];\r\n    let poke2 = teams[0].team[2];\r\n    let poke3 = teams[0].team[3];\r\n    let poke4 = teams[0].team[4];\r\n    let poke5 = teams[0].team[5];\r\n    const pokeArray = [poke, poke1, poke2, poke3, poke4, poke5];\r\n    console.log(pokeArray);\r\n    let statMap = new Map();\r\n    statMap.set(\"Bug\", 0);\r\n    statMap.set(\"Dragon\", 0);\r\n    statMap.set(\"Electric\", 0);\r\n    statMap.set(\"Fighting\", 0);\r\n    statMap.set(\"Flying\", 0);\r\n    statMap.set(\"Fire\", 0);\r\n    statMap.set(\"Ghost\", 0);\r\n    statMap.set(\"Grass\", 0);\r\n    statMap.set(\"Ground\", 0);\r\n    statMap.set(\"Ice\", 0);\r\n    statMap.set(\"Normal\", 0);\r\n    statMap.set(\"Poison\", 0);\r\n    statMap.set(\"Psychic\", 0);\r\n    statMap.set(\"Rock\", 0);\r\n    statMap.set(\"Steel\", 0);\r\n    statMap.set(\"Water\", 0);\r\n    for (const poke of pokeArray) {\r\n      console.log(\"getting stats of:\", poke);\r\n      let test = parseInt(poke) - 1;\r\n      if (props.pokemon[test] === undefined) {\r\n        return null;\r\n      }\r\n      let type_1 = props.pokemon[test].Type_1;\r\n      console.log(type_1);\r\n      let type_2 = props.pokemon[test].Type_2;\r\n      statMap.set(type_1, statMap.get(type_1) + 1);\r\n      if (type_2 !== \"\") {\r\n        statMap.set(type_2, statMap.get(type_2) + 1);\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        <li>Bug : {statMap.get(\"Bug\")}</li>\r\n        <li>Dragon : {statMap.get(\"Dragon\")}</li>\r\n        <li>Electric : {statMap.get(\"Electric\")}</li>\r\n        <li>Fighting : {statMap.get(\"Fighting\")}</li>\r\n        <li>Flying : {statMap.get(\"Flying\")}</li>\r\n        <li>Fire : {statMap.get(\"Fire\")}</li>\r\n        <li>Ghost : {statMap.get(\"Ghost\")}</li>\r\n        <li>Grass : {statMap.get(\"Grass\")}</li>\r\n        <li>Ground : {statMap.get(\"Ground\")}</li>\r\n        <li>Ice : {statMap.get(\"Ice\")}</li>\r\n        <li>Normal : {statMap.get(\"Normal\")}</li>\r\n        <li>Poison : {statMap.get(\"Poison\")}</li>\r\n        <li>Psychic : {statMap.get(\"Psychic\")}</li>\r\n        <li>Rock : {statMap.get(\"Rock\")}</li>\r\n        <li>Steel : {statMap.get(\"Steel\")}</li>\r\n        <li>Water : {statMap.get(\"Water\")}</li>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <ol>{renderTeams()}</ol>\r\n      <br />\r\n      <ul>{renderStats()}</ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nPlayer.propTypes = {\r\n  player: PropTypes.array,\r\n};\r\n\r\nexport default Player;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./styles/User.css\";\r\n\r\nfunction User(props) {\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  function usernameChange(evt) {\r\n    setUsername(evt.target.value);\r\n  }\r\n\r\n  function submit(event) {\r\n    const users = props.player;\r\n    let len = users.length;\r\n    for (let x = 0; x < len; x++) {\r\n      console.log(\"checking user\");\r\n      if (users[x].name === username) {\r\n        event.preventDefault();\r\n        props.handleChange(username);\r\n        sessionStorage.setItem(\"username\", username);\r\n        return;\r\n      }\r\n    }\r\n    alert(\r\n      \"Error: no user with that name. Try logging in again or create a new account.\"\r\n    );\r\n  }\r\n\r\n  function haveUser(event) {\r\n    const users = props.player;\r\n    let len = users.length;\r\n    for (let x = 0; x < len; x++) {\r\n      console.log(\"checking user\");\r\n      if (users[x].name.length < 1) {\r\n        alert(\"Error: please enter valid username.\");\r\n        return;\r\n      }\r\n      if (users[x].name === username) {\r\n        alert(\"Error: user already exists.\");\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  function deleteUser(event) {\r\n    const users = props.player;\r\n    let len = users.length;\r\n    for (let x = 0; x < len; x++) {\r\n      console.log(\"checking user\");\r\n      if (users[x].name === username) {\r\n        return;\r\n      }\r\n    }\r\n    alert(\"Error: user does not exist.\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p>\r\n          Welcome to PokeMongoDB! To get started create an account and login\r\n          from this page (note that creating an account may lead you away from\r\n          the login page). Once you've logged in, check out your team by\r\n          clicking Team Page in the NavBar. The Team Page will display your\r\n          Pokemon as well as the sum of their types! If you would like to change\r\n          a Pokemon in your team, click on Pokemon List in the NavBar. From\r\n          there, you can search for the Pokemon you would like in your team with\r\n          the search form, or scroll until you find one you like. Choose the\r\n          position you would like to place the Pokemon in your team and click\r\n          the add Pokemon button to update your team!\r\n        </p>\r\n      </div>\r\n      <br />\r\n      <div>\r\n        <form onSubmit={submit}>\r\n          <input type=\"text\" placeholder=\"Username\" onChange={usernameChange} />\r\n          <input type=\"submit\" value=\"Login\" />\r\n        </form>\r\n      </div>\r\n      <br />\r\n      <div>\r\n        <form action=\"/newUser\" method=\"post\" onSubmit={haveUser}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"newUsername\"\r\n            placeholder=\"Username\"\r\n            onChange={usernameChange}\r\n          />\r\n          <input type=\"submit\" value=\"Create User\" />\r\n        </form>\r\n      </div>\r\n      <br />\r\n      <div>\r\n        <form action=\"/deleteUser\" method=\"post\" onSubmit={deleteUser}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            name=\"deletedUser\"\r\n            onChange={usernameChange}\r\n          />\r\n          <input type=\"submit\" value=\"Delete User\" />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nUser.propTypes = {\r\n  player: PropTypes.array,\r\n};\r\n\r\nexport default User;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles/App.css\";\n\nimport Pokemon from \"./Pokemon.js\";\nimport Player from \"./Player.js\";\nimport User from \"./User.js\";\n\nfunction App() {\n  const [pokemon, setPokemon] = useState([]);\n  const [showPokemon, setShowPokemon] = useState(false);\n  const [player, setPlayer] = useState([]);\n  const [showTeam, setShowTeam] = useState(false);\n  const [user, setUser] = useState(\"\");\n  const [showUserEnter, setShowUserEnter] = useState(true);\n\n  useEffect(() => {\n    const getPokemon = async () => {\n      try {\n        const _pokemon = await fetch(\"/pokemon\").then((res) => res.json());\n        setPokemon(_pokemon);\n      } catch (err) {\n        console.log(\"error \", err);\n      }\n    };\n    getPokemon();\n  }, []); // Only run the first time; fetches list of pokemon\n\n  useEffect(() => {\n    const getPlayer = async () => {\n      console.log(\"getting player\");\n      try {\n        const _player = await fetch(\"/player\").then((res) => res.json());\n        setPlayer(_player);\n      } catch (err) {\n        console.log(\"error \", err);\n      }\n    };\n    getPlayer();\n  }, []); // Only run the first time; fetches user's team\n\n  useEffect(() => {\n    const storedUser = sessionStorage.getItem(\"username\");\n    if (storedUser) {\n      setUser(storedUser);\n    }\n  }, []); // Only run the first time; gets username\n\n  function handleChange(username) {\n    console.log(username);\n    setUser(username);\n    console.log(\"app: user changed\");\n    setShowTeam(true);\n    setShowPokemon(false);\n    setShowUserEnter(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <a className=\"navbar-brand\" href=\"/\">\n          <img src=\"./images/pika.png\" alt=\"Pikachu\" title=\"Pikachu\" width=\"60\" />\n          PokeMongoDB\n        </a>\n        <a\n          className=\"nav-item active nav-link\"\n          href=\"teamEdit\"\n          onClick={(evt) => {\n            evt.preventDefault();\n            setShowTeam(true);\n            setShowPokemon(false);\n            setShowUserEnter(false);\n          }}\n        >\n          Team Page<span className=\"sr-only\">(current)</span>\n        </a>\n        <a\n          className=\"nav-item active nav-link\"\n          href=\"pokeList\"\n          onClick={(evt) => {\n            evt.preventDefault();\n            setShowPokemon(true);\n            setShowTeam(false);\n            setShowUserEnter(false);\n          }}\n        >\n          Pokemon List<span className=\"sr-only\">(current)</span>\n        </a>\n        <a\n          className=\"nav-item active mavbar-nav nav-link navbar-right\"\n          href=\"userlogin\"\n          onClick={(evt) => {\n            evt.preventDefault();\n            setShowTeam(false);\n            setShowPokemon(false);\n            setShowUserEnter(true);\n          }}\n        >\n          Change User: {user}\n          <span className=\"sr-only\">(current)</span>\n        </a>\n      </nav>\n      <div class=\"container text-left\">\n        <h1>Build Your Best Team!</h1>\n        {showUserEnter ? (\n          <User handleChange={handleChange} player={player}></User>\n        ) : (\n          \"\"\n        )}\n        {showPokemon ? (\n          <Pokemon player={player} pokemon={pokemon} user={user}></Pokemon>\n        ) : (\n          \"\"\n        )}\n        {showTeam ? (\n          <Player player={player} pokemon={pokemon} user={user}></Player>\n        ) : (\n          \"\"\n        )}\n        <br />\n        <footer>\n          Created by Alex Moeller and Ely Lam 2020{\" \"}\n          <img\n            src=\"./images/pokeball.png\"\n            alt=\"Pokeball\"\n            title=\"Pokeball\"\n            width=\"20\"\n          />\n        </footer>\n      </div>\n    </div>\n  );\n}\n\n// Image from https://www.freeiconspng.com/img/45343\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './components/styles/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}